#! /bin/bash


## dont run on a bare repo

pwd | grep "[^/].git$"
if [[ "$?" = "0" ]]; then
    if [[ ! -f ../.pts.silence-bare-warning ]]; then
	# TODO test
	echo "push-to-systemd doesn't work on bare repositories, which this one looks like given its .git extension. You can suppress this by adding the file `.pts.silence-bare-warning` to the top-level of your repo."
	exit 1
    fi
fi


## setup env and repo

unset GIT_DIR                            # otherwise, git ops flail

cd ..                                    # back to repo root

git reset HEAD --hard > /dev/null        # update local working copy to reflect push
                                         # so build commands can operate on the latest


## send build/install output to client

log=push-to-systemd.log                  # written to by push-to-systemd.service
rm $log 2&> /dev/null
touch $log
tail -f $log &                           # echo build output and service status back to pusher
tailpid=$!                               # we'll need to kill the tail process later to exit


## die when build/install completes

done=push-to-systemd.done
rm $done 2> /dev/null
touch $done
echo "beginnign to wait"
ls $done | \
    entr -n -p -s "kill $tailpid; kill \$PPID;" & # kill the bg'd tail proc and entr, which is blocking
echo "waiting"

echo "$(pwd) $(date)" >> \
     /var/log/push-to-systemd.post-receive.log

wait $tailpid 2> /dev/null


# TODO branches
