#! /bin/bash

unset GIT_DIR                            # otherwise, git ops flail
cd ..                                    # back to repo root (from .git)

if [[ -z $(git branch) ]]; then
	git checkout main
fi

git reset HEAD --hard > /dev/null        # update local working copy to reflect push
                                         # so build commands can operate on the latest

systemd_dir=/usr/lib/systemd/user/

find $repo -name "*.service" |
	while read service_file; do
		service_name=$(basename $service_file)
		echo "Installing $service_name"
		dest=$systemd_dir/$service_name
		if [[ -e "$dest" || -h "$dest" ]]; then
			if [ -h "$dest" ]; then
				existing=$(readlink $dest)
				if [[ "$existing" != "$(readlink -f $service_file)" ]]; then
					# NB this will break if you move a service file within your repo
					echo "error: won't overwrite symlink, $dest, which points to $existing."
					continue
				fi
			else
				echo "Error: $dest is a regular file. Won't install $source."
				continue
			fi
		else
			ln -s $(realpath $service_file) $systemd_dir
		fi

		echo "$echo_pref reloading systemctl daemon and re/starting $service_name..."
		systemctl --user daemon-reload
		systemctl --user enable $service_name
		systemctl --user restart $service_name
		sleep 1
		systemctl --user status $service_name
	done
